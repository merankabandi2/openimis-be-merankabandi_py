"""
Grievance Materialized Views
All views related to grievance management and resolution
"""

GRIEVANCE_VIEWS = {
    'dashboard_grievance_category': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_category AS
SELECT grievance_social_protection_ticket.category, count(*) AS count, (((count(*))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket grievance_social_protection_ticket_1 WHERE (grievance_social_protection_ticket_1."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM grievance_social_protection_ticket WHERE ((grievance_social_protection_ticket."isDeleted" = false) AND (grievance_social_protection_ticket.category IS NOT NULL)) GROUP BY grievance_social_protection_ticket.category, CURRENT_DATE ORDER BY (count(*)) DESC''',
        'indexes': [
            """CREATE INDEX idx_grievance_category_category ON dashboard_grievance_category USING btree (category);""",
            """CREATE INDEX idx_grievance_category_report_date ON dashboard_grievance_category USING btree (report_date);""",
        ]
    },
    'dashboard_grievance_category_details': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_category_details AS
WITH category_expanded AS ( SELECT t."UUID" AS id, t.status, COALESCE(t.code, ''::character varying) AS code, t.date_of_incident, t.channel, CASE WHEN ((t.category)::text ~~ '[%'::text) THEN (TRIM(BOTH '"'::text FROM elem.value))::character varying ELSE t.category END AS individual_category FROM (grievance_social_protection_ticket t LEFT JOIN LATERAL json_array_elements_text( CASE WHEN ((t.category)::text ~~ '[%'::text) THEN (t.category)::json ELSE '[""]'::json END) elem(value) ON (true)) WHERE ((t."isDeleted" = false) AND (t.category IS NOT NULL) AND ((t.category)::text <> ''::text) AND (((t.category)::text !~~ '[%'::text) OR (elem.value IS NOT NULL))) ), category_mapped AS ( SELECT category_expanded.id, category_expanded.status, category_expanded.code, category_expanded.date_of_incident, category_expanded.channel, category_expanded.individual_category, CASE WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['discrimination'::character varying, 'abus_de_pouvoir'::character varying, 'corruption_sollicitation_pot_de_vin'::character varying, 'violence_agression_physique'::character varying, 'exclusion_du_programme'::character varying])::text[])) THEN 'cas_sensibles'::text WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['information'::character varying, 'mise_a_jour_informations_personnelles'::character varying, 'erreur_de_synchronisation'::character varying, 'double_tete'::character varying, 'erreur_dinclusion'::character varying, 'erreur_exclusion'::character varying, 'autres_cas_speciaux'::character varying, 'menage_inexistant_dan_la_bd'::character varying, 'mauvais_etat_de_la_carte'::character varying, 'carte_non_recue'::character varying, 'erreur_de_ciblage'::character varying, 'non_reception_du_cash'::character varying, 'validation_paiement'::character varying, 'inscription'::character varying, 'perte_de_carte'::character varying, 'erreur_montant_recu'::character varying, 'suspension_de_paiement'::character varying, 'erreur_numero'::character varying])::text[])) THEN 'cas_speciaux'::text WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['autres'::character varying, 'carte_expiree'::character varying, 'carte_bloquee'::character varying, 'code_pin'::character varying, 'telephone'::character varying, 'comment'::character varying, 'demande_dinformations'::character varying, 'felicitations'::character varying, 'demande_de_paiement'::character varying, 'paiement_non_recu'::character varying, 'deces'::character varying, 'aide_medicale'::character varying, 'destruction_abris_par_catastrophe'::character varying, 'deplacement_du_menage'::character varying, 'erreur_operateur_paiement'::character varying, 'suggestion'::character varying])::text[])) THEN 'cas_non_sensibles'::text ELSE 'uncategorized'::text END AS category_group FROM category_expanded ) SELECT category_mapped.individual_category, category_mapped.category_group, category_mapped.status, count(DISTINCT category_mapped.id) AS count, (((count(DISTINCT category_mapped.id))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket WHERE (grievance_social_protection_ticket."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM category_mapped GROUP BY category_mapped.individual_category, category_mapped.category_group, category_mapped.status ORDER BY (count(DISTINCT category_mapped.id)) DESC''',
        'indexes': [
            """CREATE INDEX idx_dashboard_grievance_category_details_category ON dashboard_grievance_category_details USING btree (individual_category);""",
            """CREATE INDEX idx_dashboard_grievance_category_details_group ON dashboard_grievance_category_details USING btree (category_group);""",
            """CREATE INDEX idx_dashboard_grievance_category_details_status ON dashboard_grievance_category_details USING btree (status);""",
        ]
    },
    'dashboard_grievance_category_summary': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_category_summary AS
WITH category_expanded AS ( SELECT t."UUID" AS id, t.status, CASE WHEN ((t.category)::text ~~ '[%'::text) THEN (TRIM(BOTH '"'::text FROM elem.value))::character varying ELSE t.category END AS individual_category FROM (grievance_social_protection_ticket t LEFT JOIN LATERAL json_array_elements_text( CASE WHEN ((t.category)::text ~~ '[%'::text) THEN (t.category)::json ELSE '[""]'::json END) elem(value) ON (true)) WHERE ((t."isDeleted" = false) AND (t.category IS NOT NULL) AND ((t.category)::text <> ''::text) AND (((t.category)::text !~~ '[%'::text) OR (elem.value IS NOT NULL))) ), category_mapped AS ( SELECT category_expanded.id, category_expanded.status, category_expanded.individual_category, CASE WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['discrimination'::character varying, 'abus_de_pouvoir'::character varying, 'corruption_sollicitation_pot_de_vin'::character varying, 'violence_agression_physique'::character varying, 'exclusion_du_programme'::character varying])::text[])) THEN 'cas_sensibles'::text WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['information'::character varying, 'mise_a_jour_informations_personnelles'::character varying, 'erreur_de_synchronisation'::character varying, 'double_tete'::character varying, 'erreur_dinclusion'::character varying, 'erreur_exclusion'::character varying, 'autres_cas_speciaux'::character varying, 'menage_inexistant_dan_la_bd'::character varying, 'mauvais_etat_de_la_carte'::character varying, 'carte_non_recue'::character varying, 'erreur_de_ciblage'::character varying, 'non_reception_du_cash'::character varying, 'validation_paiement'::character varying, 'inscription'::character varying, 'perte_de_carte'::character varying, 'erreur_montant_recu'::character varying, 'suspension_de_paiement'::character varying, 'erreur_numero'::character varying])::text[])) THEN 'cas_speciaux'::text WHEN ((category_expanded.individual_category)::text = ANY ((ARRAY['autres'::character varying, 'carte_expiree'::character varying, 'carte_bloquee'::character varying, 'code_pin'::character varying, 'telephone'::character varying, 'comment'::character varying, 'demande_dinformations'::character varying, 'felicitations'::character varying, 'demande_de_paiement'::character varying, 'paiement_non_recu'::character varying, 'deces'::character varying, 'aide_medicale'::character varying, 'destruction_abris_par_catastrophe'::character varying, 'deplacement_du_menage'::character varying, 'erreur_operateur_paiement'::character varying, 'suggestion'::character varying])::text[])) THEN 'cas_non_sensibles'::text ELSE 'uncategorized'::text END AS category_group FROM category_expanded ) SELECT category_mapped.category_group, category_mapped.status, count(DISTINCT category_mapped.id) AS count, (((count(DISTINCT category_mapped.id))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket WHERE (grievance_social_protection_ticket."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM category_mapped GROUP BY category_mapped.category_group, category_mapped.status ORDER BY category_mapped.category_group, category_mapped.status''',
        'indexes': [
            """CREATE INDEX idx_dashboard_grievance_category_summary_group ON dashboard_grievance_category_summary USING btree (category_group);""",
            """CREATE INDEX idx_dashboard_grievance_category_summary_status ON dashboard_grievance_category_summary USING btree (status);""",
        ]
    },
    'dashboard_grievance_channel': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_channel AS
SELECT grievance_social_protection_ticket.channel, count(*) AS count, (((count(*))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket grievance_social_protection_ticket_1 WHERE (grievance_social_protection_ticket_1."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM grievance_social_protection_ticket WHERE ((grievance_social_protection_ticket."isDeleted" = false) AND (grievance_social_protection_ticket.channel IS NOT NULL)) GROUP BY grievance_social_protection_ticket.channel, CURRENT_DATE ORDER BY (count(*)) DESC''',
        'indexes': [
            """CREATE INDEX idx_grievance_channel_channel ON dashboard_grievance_channel USING btree (channel);""",
        ]
    },
    'dashboard_grievance_channels': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_channels AS
SELECT grievance_social_protection_ticket.channel, grievance_social_protection_ticket.status, count(*) AS count, (((count(*))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket grievance_social_protection_ticket_1 WHERE (grievance_social_protection_ticket_1."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM grievance_social_protection_ticket WHERE ((grievance_social_protection_ticket."isDeleted" = false) AND (grievance_social_protection_ticket.channel IS NOT NULL)) GROUP BY grievance_social_protection_ticket.channel, grievance_social_protection_ticket.status ORDER BY (count(*)) DESC''',
        'indexes': [
            """CREATE INDEX idx_dashboard_grievance_channels_channel ON dashboard_grievance_channels USING btree (channel);""",
            """CREATE INDEX idx_dashboard_grievance_channels_status ON dashboard_grievance_channels USING btree (status);""",
        ]
    },
    'dashboard_grievance_priority': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_priority AS
SELECT grievance_social_protection_ticket.priority, count(*) AS count, (((count(*))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket grievance_social_protection_ticket_1 WHERE (grievance_social_protection_ticket_1."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM grievance_social_protection_ticket WHERE ((grievance_social_protection_ticket."isDeleted" = false) AND (grievance_social_protection_ticket.priority IS NOT NULL)) GROUP BY grievance_social_protection_ticket.priority, CURRENT_DATE ORDER BY (count(*)) DESC''',
        'indexes': [
            """CREATE INDEX idx_grievance_priority_priority ON dashboard_grievance_priority USING btree (priority);""",
        ]
    },
    'dashboard_grievance_status': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievance_status AS
SELECT grievance_social_protection_ticket.status, count(*) AS count, (((count(*))::numeric / (( SELECT count(*) AS count FROM grievance_social_protection_ticket grievance_social_protection_ticket_1 WHERE (grievance_social_protection_ticket_1."isDeleted" = false)))::numeric) * (100)::numeric) AS percentage, CURRENT_DATE AS report_date FROM grievance_social_protection_ticket WHERE ((grievance_social_protection_ticket."isDeleted" = false) AND (grievance_social_protection_ticket.status IS NOT NULL)) GROUP BY grievance_social_protection_ticket.status, CURRENT_DATE ORDER BY (count(*)) DESC''',
        'indexes': [
            """CREATE INDEX idx_grievance_status_report_date ON dashboard_grievance_status USING btree (report_date);""",
            """CREATE INDEX idx_grievance_status_status ON dashboard_grievance_status USING btree (status);""",
        ]
    },
    'dashboard_grievances': {
        'sql': '''CREATE MATERIALIZED VIEW dashboard_grievances AS
SELECT 'SUMMARY'::text AS summary_type, count(*) AS total_tickets, count( CASE WHEN ((grievance_social_protection_ticket.status)::text = 'OPEN'::text) THEN 1 ELSE NULL::integer END) AS open_tickets, count( CASE WHEN ((grievance_social_protection_ticket.status)::text = 'IN_PROGRESS'::text) THEN 1 ELSE NULL::integer END) AS in_progress_tickets, count( CASE WHEN ((grievance_social_protection_ticket.status)::text = 'RESOLVED'::text) THEN 1 ELSE NULL::integer END) AS resolved_tickets, count( CASE WHEN ((grievance_social_protection_ticket.status)::text = 'CLOSED'::text) THEN 1 ELSE NULL::integer END) AS closed_tickets, count( CASE WHEN (((grievance_social_protection_ticket.category)::text ~~ '%"violence_vbg"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"corruption"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"discrimination"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"discrimination_ethnie_religion"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"abus_de_pouvoir"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"corruption_sollicitation_pot_de_vin"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"violence_agression_physique"%'::text) OR ((grievance_social_protection_ticket.category)::text ~~ '%"exclusion_du_programme"%'::text)) THEN 1 ELSE NULL::integer END) AS sensitive_tickets, count( CASE WHEN ((grievance_social_protection_ticket.is_anonymous)::text = 'true'::text) THEN 1 ELSE NULL::integer END) AS anonymous_tickets, avg( CASE WHEN (((grievance_social_protection_ticket.is_resolved)::text = 'true'::text) AND (grievance_social_protection_ticket."DateUpdated" IS NOT NULL)) THEN (EXTRACT(epoch FROM (grievance_social_protection_ticket."DateUpdated" - grievance_social_protection_ticket."DateCreated")) / (86400)::numeric) ELSE NULL::numeric END) AS avg_resolution_days, CURRENT_DATE AS report_date, date_trunc('month'::text, (CURRENT_DATE)::timestamp with time zone) AS month, date_trunc('quarter'::text, (CURRENT_DATE)::timestamp with time zone) AS quarter, EXTRACT(year FROM CURRENT_DATE) AS year FROM grievance_social_protection_ticket WHERE (grievance_social_protection_ticket."isDeleted" = false) GROUP BY 'SUMMARY'::text, CURRENT_DATE, (date_trunc('month'::text, (CURRENT_DATE)::timestamp with time zone)), (date_trunc('quarter'::text, (CURRENT_DATE)::timestamp with time zone)), (EXTRACT(year FROM CURRENT_DATE))''',
        'indexes': [
            """CREATE INDEX idx_dashboard_grievances_date ON dashboard_grievances USING btree (report_date);""",
            """CREATE INDEX idx_dashboard_grievances_type ON dashboard_grievances USING btree (summary_type);""",
            """CREATE INDEX idx_grievances_month ON dashboard_grievances USING btree (month);""",
            """CREATE INDEX idx_grievances_summary_type ON dashboard_grievances USING btree (summary_type);""",
        ]
    },
}
